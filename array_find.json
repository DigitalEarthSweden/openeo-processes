{
    "id": "array_find",
    "summary": "Get the index/label for a value in an array",
    "description": "Checks whether the array specified for `data` contains the value specified in `value` and returns the zero-based index for the first match. If there's no match, `null` is returned. Returns the label instead of the index if `return_label` has been set to `true`.\n\n**Remarks:**\n\n* To get a boolean value returned use ``array_contains()``.\n* All definitions for the process ``eq()`` regarding the comparison of values apply here as well. This includes that data types MUST be checked strictly, for example a string with the content *1* is not equal to the number *1*.\n* An integer *1* is equal to a floating point number *1.0* as `integer` is a sub-type of `number`. Still, this process may return unexpectedly `false` when comparing floating point numbers due to floating point inaccuracy in machine-based computation.\n* Temporal strings are treated as normal strings and MUST NOT be interpreted.",
    "categories": [
        "arrays"
    ],
    "parameters": [
        {
            "name": "data",
            "description": "List to find the value in.",
            "schema": {
                "type": "array",
                "items": {
                    "description": "Any data type is allowed."
                }
            },
            "required": true
        },
        {
            "name": "value",
            "description": "Value to find in `data`.",
            "schema": {
                "description": "Any data type is allowed."
            },
            "required": true
        },
        {
            "name": "return_label",
            "description": "The process returns the label instead of the index if set to `true`. If no labeled array was given in `data`, the index is still returned.",
            "schema": {
                "type": "boolean"
            },
            "default": false
        }
    ],
    "returns": {
        "description": "Depending on the parameter `return_label`, returns either the index or the label of the first element with the specified value. If no element was found, `null` is returned.",
        "schema": [
            {
                "type": "number"
            },
            {
                "type": "string"
            },
            {
                "type": "null"
            }
        ]
    },
    "examples": [
        {
            "arguments": {
                "data": [
                    1,
                    2,
                    3
                ],
                "value": 2
            },
            "returns": 1
        },
        {
            "arguments": {
                "data": [
                    "A",
                    "B",
                    "C"
                ],
                "value": "b"
            },
            "returns": null
        },
        {
            "arguments": {
                "data": [
                    1,
                    2,
                    3
                ],
                "value": "2"
            },
            "returns": null
        },
        {
            "arguments": {
                "data": [
                    1,
                    null,
                    2,
                    null
                ],
                "value": null
            },
            "returns": 1
        },
        {
            "arguments": {
                "data": [
                    [
                        1,
                        2
                    ],
                    [
                        3,
                        4
                    ]
                ],
                "value": [
                    1,
                    2
                ]
            },
            "returns": null
        },
        {
            "arguments": {
                "data": [
                    [
                        1,
                        2
                    ],
                    [
                        3,
                        4
                    ]
                ],
                "value": 2
            },
            "returns": null
        },
        {
            "arguments": {
                "data": [
                    {
                        "a": "b"
                    },
                    {
                        "c": "d"
                    }
                ],
                "value": {
                    "a": "b"
                }
            },
            "returns": null
        }
    ]
}