{
    "id": "apply_neighbourhood",
    "summary": "Apply a process to pixels in a n-dimensional neighbourhood",
    "description": "Apply a focal process to a data cube. A focal process is a process that works on a 'neighbourhood' of pixels. The neighbourhood can extend into multiple dimensions, this extent is specified by the 'size' argument. An overlap can be specified so that neighbourhoods can have overlapping boundaries. This allows for continuity of the output.\n\nThe process must not add new dimensions, or remove entire dimensions, but the result can use different dimension labels.\n\nFor the special case of 2D convolution, it is recommended to use ``apply_kernel()``.",
    "categories": [
        "cubes"
    ],
    "parameters": [
        {
            "name": "data",
            "description": "A data cube.",
            "schema": {
                "type": "object",
                "subtype": "raster-cube"
            }
        },
        {
            "name": "process",
            "description": "Process to be applied on all neighbourhoods.",
            "schema": {
                "type": "object",
                "subtype": "process-graph",
                "parameters": [
                    {
                        "name": "data",
                        "description": "A subset of the data cube as specified in `context` and `overlap`.",
                        "schema": {
                            "type": "object",
                            "subtype": "raster-cube"
                        }
                    },
                    {
                        "name": "context",
                        "description": "Additional data passed by the user.",
                        "schema": {
                            "description": "Any data type."
                        },
                        "optional": true,
                        "default": null
                    }
                ]
            }
        },
        {
            "name": "size",
            "description": "Neighbourhood sizes along each dimension. \n This object maps dimension names to either a physical measure, (e.g. 100 m, 10 days), or pixels (e.g. 32 pixels).\n Default is to provide all values. This may result in an exception if the dimension is too large to be fully included.\n\n The moving window moves with multiples of 'size' along each dimension. All values in the window specified by size can be modified by the process.\n\n The neighbourhood size should be kept small enough, to avoid running beyond computational resources, but a too small size will result in a larger number of process invocations, which may slow down processing.",
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "subtype": "chunk-size",
                    "required": [
                        "dimension",
                        "value"
                    ],
                    "properties": {
                        "dimension": {
                            "type": "string"
                        },
                        "value": {
                            "default": null,
                            "oneOf": [
                                {
                                    "type": "null",
                                    "description": "All values"
                                },
                                {
                                    "type": "number",
                                    "minimum": 0,
                                    "description": "See the `unit` parameter for more information."
                                },
                                {
                                    "type": "string",
                                    "subtype": "duration",
                                    "description": "ISO 8601 duration, e.g. `P1D` for one day."
                                }
                            ]
                        },
                        "unit": {
                            "type": "string",
                            "description": "The unit the values are given in. If no unit is given, uses the unit specified for the dimension or if not given the default unit of the reference system.",
                            "enum": [
                                "px",
                                "m"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "overlap",
            "description": "Overlap of neighbourhoods along each dimension. For instance a temporal dimension can add 1 month before and after a neighbourhood. In the spatial dimensions, this is often a number of pixels. The overlap specified is added before and after, so an overlap of 8 pixels will add 8 pixels on both sides of the window, so 16 in total.\n Modifying overlapping data in subsequent operations should have no effect. \n\n Overlaps are necessary to avoid border effects, but large overlaps also increase the need for computational resources. This trade-off should be kept in mind when designing your process graph.",
            "optional": true,
            "default": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "subtype": "chunk-size",
                    "required": [
                        "dimension",
                        "value"
                    ],
                    "properties": {
                        "dimension": {
                            "type": "string"
                        },
                        "value": {
                            "default": null,
                            "oneOf": [
                                {
                                    "type": "null",
                                    "description": "No values"
                                },
                                {
                                    "type": "number",
                                    "minimum": 0,
                                    "description": "See the `unit` parameter for more information."
                                },
                                {
                                    "type": "string",
                                    "subtype": "duration",
                                    "description": "ISO 8601 duration, e.g. `P1D` for one day."
                                }
                            ]
                        },
                        "unit": {
                            "type": "string",
                            "description": "The unit the values are given in. If no unit is given, uses the unit specified for the dimension or if not given the default unit of the reference system.",
                            "enum": [
                                "px",
                                "m"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "context",
            "description": "Additional data to be passed to the process.",
            "schema": {
                "description": "Any data type."
            },
            "optional": true,
            "default": null
        }
    ],
    "returns": {
        "description": "A data cube with the newly computed values. The resolution and the number of dimensions are the same as for the original data cube.",
        "schema": {
            "type": "object",
            "subtype": "raster-cube"
        }
    },
    "examples": [
        {
            "arguments": {
                "size":[
                    {"dimension" : "x", "size": 128, "unit": "px"},
                    {"dimension" : "y", "size": 128, "unit": "px"},
                    {"dimension" : "t", "size": "P5D"}
                ],
                "overlap": [
                    {"dimension" : "x", "size": 16, "unit": "px"},
                    {"dimension" : "y", "size": 16, "unit": "px"},
                    {"dimension" : "t", "size": "P3D"}
                ]
            }
        }
        ],
    "exceptions": {
        "DimensionNotAvailable": {
            "message": "A dimension with the specified name does not exist."
        }
    }
}