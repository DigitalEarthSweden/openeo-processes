{
    "id": "bitwise_and",
    "summary": "Bitwise AND",
    "description": "Performs a bitwise AND operation on two inputs. This process supports both scalar values (integers and floats) and multi-dimensional arrays (e.g., datacubes). When applied to integers, the operation is performed on the binary representation of the numbers. When applied to floats, the values are truncated to their integer parts before the operation. Special cases like `NaN` in floats will propagate to the result. For multi-dimensional arrays, the operation is applied element-wise.",
    "categories": [
        "bitwise"
    ],
    "experimental": true,
    "parameters": [
        {
            "name": "x",
            "description": "A numeric input, either an integer, float, or a multi-dimensional array.",
            "schema": {
                "type": ["integer", "number", "array"]
            }
        },
        {
            "name": "y",
            "description": "A numeric input, either an integer, float, or a multi-dimensional array.",
            "schema": {
                "type": ["integer", "number", "array"]
            }
        }
    ],
    "returns": {
        "description": "The result of the bitwise AND operation. If the inputs are scalars, the result is a scalar. If the inputs are multi-dimensional arrays, the result is an array.",
        "schema": {
            "type": ["integer", "number", "array"]
        }
    },
    "examples": [
        {
            "arguments": {
                "x": 6,
                "y": 3
            },
            "returns": 2
        },
        {
            "arguments": {
                "x": 6.7,
                "y": 4.2
            },
            "returns": 4
        },
        {
            "arguments": {
                "x": [[5, 7], [8, 3]],
                "y": [[1, 3], [8, 1]]
            },
            "returns": [[1, 3], [8, 1]]
        }
    ],
    "process_graph": {
        "bitwise_and": {
            "process_id": "bitwise_and",
            "arguments": {
                "x": {
                    "from_parameter": "x"
                },
                "y": {
                    "from_parameter": "y"
                }
            },
            "result": true
        }
    }
}
