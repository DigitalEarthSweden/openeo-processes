{
    "id": "date_shift",
    "summary": "Calculates and manipulates dates and times",
    "description": "Based on a given date (and optionally time), calculates a new date (and time if given) by adding or subtracting a given temporal period. If the given date doesn't include a time component, the returned values will also not include the time component.\n\nThis process doesn't change the time zone and also doesn't take daylight saving time (DST) into account.",
    "categories": [
        "date & time"
    ],
    "experimental": true,
    "parameters": [
        {
            "name": "data",
            "description": "The date (and optionally time) to manipulate.\n\nIf the given date doesn't include the time, the process assumes that the time component is `00:00:00Z` (i.e. midnight, in UTC). The millisecond part of the time is optional and defaults to 0 if not given.",
            "schema": [
                {
                    "type": "string",
                    "format": "date-time",
                    "subtype": "date-time"
                },
                {
                    "type": "string",
                    "format": "date",
                    "subtype": "date"
                }
            ]
        },
        {
            "name": "value",
            "description": "The period of time in the unit given that is added (positive numbers) or subtracted (negative numbers).",
            "schema": {
                "type": "integer"
            }
        },
        {
            "name": "unit",
            "description": "The unit for the value given. The following pre-defined units are available:\n\n- millisecond: Milliseconds\n- second: Seconds\n- minute: Minutes\n- hour: Hours\n- day: Days - changes only the the day part of a date (and potentially also the month and the year)\n- week: Weeks (equivalent to 7 days)\n- month: Months - changes only the month part of a date (and potentially also the year)\n- year: Years - changes only the year part of a date\n\nIf any of the changes result in an invalid date, the corresponding part is rounded down to the next valid date. For example, adding a month to `2020-01-31` would result in `2020-02-29`.",
            "schema": {
                "type": "string",
                "enum": [
                    "millisecond",
                    "second",
                    "minute",
                    "hour",
                    "day",
                    "week",
                    "month",
                    "year"
                ]
            }
        }
    ],
    "returns": {
        "description": "The manipulated date (and time if a time component is given in the parameter `data`).",
        "schema": [
            {
                "type": "string",
                "format": "date-time",
                "subtype": "date-time"
            },
            {
                "type": "string",
                "format": "date",
                "subtype": "date"
            }
        ]
    },
    "examples": [
        {
            "arguments": {
                "data": "2020-02-29T17:22:45Z",
                "value": 1,
                "unit": "year"
            },
            "returns": "2021-02-28T17:22:45Z"
        },
        {
            "arguments": {
                "data": "2020-02-01T17:22:45Z",
                "value": 6,
                "unit": "month"
            },
            "returns": "2020-08-01T17:22:45Z"
        },
        {
            "arguments": {
                "data": "2021-03-31T00:00:00+02:00",
                "value": -7,
                "unit": "day"
            },
            "returns": "2021-03-24T00:00:00+02:00"
        },
        {
            "arguments": {
                "data": "2018-12-31T17:22:45Z",
                "value": 1150,
                "unit": "millisecond"
            },
            "returns": "2018-12-31T17:22:46.150Z"
        },
        {
            "arguments": {
                "data": "2018-01-01",
                "value": 25,
                "unit": "hour"
            },
            "returns": "2018-01-02"
        },
        {
            "arguments": {
                "data": "2018-01-01",
                "value": -1,
                "unit": "hour"
            },
            "returns": "2017-12-31"
        }
    ]
}