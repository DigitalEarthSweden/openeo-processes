{
    "id": "apply_dimension",
    "summary": "Applies a process to pixels along a dimension",
    "description": "Applies a process to all pixel values along a dimension of a raster data cube. For example, if the temporal dimension is specified the process will work on a time series of pixel values.\n\nBy default, the target dimension is the source dimension so that the source dimension gets modified. By specifying a target dimension, the source dimension is removed and the target dimension gets modified. If the target dimension doesn't exist it is created beforehand. See the parameter `target_dimension` for more details.\n\nThe process ``reduce()`` also applies a process to pixel values along a dimension, but removes the dimension afterwards. The process ``apply()`` applies a process to each pixel value in the data cube.",
    "categories": [
        "cubes"
    ],
    "parameter_order": [
        "data",
        "process",
        "dimension",
        "target_dimension"
    ],
    "parameters": {
        "data": {
            "description": "A data cube.",
            "schema": {
                "type": "object",
                "subtype": "raster-cube"
            },
            "required": true
        },
        "process": {
            "description": "Process to be applied on all pixel values. The specified process needs to accept an array as parameter and must return an array with least one element. A process may consist of multiple sub-processes.",
            "schema": {
                "type": "object",
                "subtype": "process-graph",
                "parameters": {
                    "data": {
                        "description": "An array with elements of any data type.",
                        "type": "array",
                        "items": {
                            "description": "Any data type."
                        }
                    }
                }
            },
            "required": true
        },
        "dimension": {
            "description": "The name of the source dimension to apply the process on. Fails with a `DimensionNotAvailable` error if the specified dimension does not exist.",
            "schema": {
                "type": "string"
            },
            "required": true
        },
        "target_dimension": {
            "description": "The name of the target dimension or `null` (the default) to use the source dimension specified in the parameter `dimension`.\n\n* The default is that the target dimension is the source dimension so that the pixel values are replaced in the source dimension. The original name, type and reference system are preserved.\n* By specifying a target dimension, the source dimension is removed and the target dimension is populated with the computed pixel values.\n  * If the target dimension *does not exist*, a new dimension with the specified name and the type `other` (see ``add_dimension()``) is created.\n  * If the target dimension *does exist*, the pixel values are replaced in the target dimension. The original name, type and reference system are preserved. This case is meant to be used to populate a new dimension added with ``add_dimension()``.\n\nIn general, the target dimension will have as many dimension labels as values are available after applying the process. The dimension labels are preserved when the number of pixel values in the source dimension is equal to the number of values computed by the process. Otherwise, the dimension labels will be incrementing integers starting from zero, which can be changed using ``rename_labels()`` afterwards.",
            "schema": {
                "type": [
                    "string",
                    "null"
                ]
            },
            "default": null
        }
    },
    "returns": {
        "description": "A data cube with the newly computed values for the specified. The resolution and the number of dimensions are the same as for the original data cube.",
        "schema": {
            "type": "object",
            "subtype": "raster-cube"
        }
    },
    "exceptions": {
        "DimensionNotAvailable": {
            "message": "A dimension with the specified name does not exist."
        }
    }
}
